plugins {
    id "com.gradle.build-scan" version "2.3"
    id "com.gradle.plugin-publish" version "0.10.1"
    id "java-gradle-plugin"
    id "groovy"
    id "jacoco"
    id "com.jfrog.bintray" version "1.8.4"
    id "com.github.kt3k.coveralls" version "2.5.0"
}

buildScan {
    termsOfServiceUrl   = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
}

group 'org.kt3k.gradle.plugin'
version '2.8.2'

repositories {
    jcenter()
}

dependencies {
    compile localGroovy()
    compile gradleApi()

    compile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'
    compile 'org.apache.httpcomponents:httpmime:4.3'
    compile 'org.eclipse.jgit:org.eclipse.jgit:3.6.0.201412230720-r'

    testCompile 'junit:junit:4.11'
    testCompile 'org.mockito:mockito-all:1.9.5'
    testCompile 'com.github.tomakehurst:wiremock:2.23.2'
}

tasks.withType(JavaCompile) {
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
}

tasks.withType(GroovyCompile) {
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
    classifier = 'javadoc'
    from 'build/docs/groovydoc'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives jar
    archives groovydocJar
    archives sourcesJar
}

gradlePlugin {
  plugins {
    coverallsPlugin {
      id = 'com.github.kt3k.coveralls'
      implementationClass = 'org.kt3k.gradle.plugin.CoverallsPlugin'
    }
  }
}

pluginBundle {
  website = 'http://github.com/kt3k/coveralls-gradle-plugin'
  vcsUrl = 'https://github.com/kt3k/coveralls-gradle-plugin.git'
  description = 'Send coverage data to coveralls.io'
  tags = ['coverage', 'coveralls']

  plugins {
    coverallsPlugin {
      displayName = 'Coveralls Gradle plugin'
    }
  }
}
